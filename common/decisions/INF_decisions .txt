INF_Bharatsha_Gold = {

	INF_invest_Military = {

		icon = GFX_decision_kill_big

		allowed = {
		}

		available = {
			AND = {
				check_variable = {
					var = inf_gold_storage
					value = 500
					compare = greater_than_or_equals
				}
				NOT = {
					has_national_flag = selling_gold
				}
			}
		}

		fire_only_once = no

		days_remove = 30
		days_re_enable = 30

		custom_cost_trigger = {
			check_variable = {
				var = inf_gold_storage
				value = 500
				compare = greater_than_or_equals
			}
		}
		
		custom_cost_text = 500_gold

		complete_effect = {
			subtract_from_variable = { inf_gold_storage = 500 }
			set_country_flag = selling_gold
		}
		
		remove_effect = {
	     	add_offsite_building = { 
			type = arms_factory level = 1 
			}
			clr_country_flag = selling_gold
		}
		
		ai_will_do = {
			factor = 5
		}
	}
	
	INF_invest_civilian = {

		icon = GFX_decision_generic_industry

		allowed = {
		}

		available = {
			AND = {
				check_variable = {
					var = inf_gold_storage
					value = 250
					compare = greater_than_or_equals
				}
				NOT = {
					has_national_flag = selling_gold
				}
			}
		}

		fire_only_once = no

		days_remove = 30
		days_re_enable = 30

		custom_cost_trigger = {
			check_variable = {
				var = inf_gold_storage
				value = 250
				compare = greater_than_or_equals
			}
		}
		
		custom_cost_text = 250_gold

		complete_effect = {
			subtract_from_variable = { inf_gold_storage = 250 }
			set_country_flag = selling_gold
		}
		
		remove_effect = {
	     	add_offsite_building = { 
				type = industrial_complex level = 1 
			}
			clr_country_flag = selling_gold
		}
		
		ai_will_do = {
			factor = 5
		}
	}
	
	INF_invest_infrastructure = {

		icon = GFX_decision_generic_construction

		allowed = {
		}

		available = {
			AND = {
				check_variable = {
					var = inf_gold_storage
					value = 600
					compare = greater_than_or_equals
				}
				NOT = {
					has_national_flag = selling_gold
				}
			}
		}

		fire_only_once = no

		days_remove = 60
		days_re_enable = 30

		custom_cost_trigger = {
			check_variable = {
				var = inf_gold_storage
				value = 600
				compare = greater_than_or_equals
			}
		}
		
		custom_cost_text = 600_gold

		complete_effect = {
			subtract_from_variable = { inf_gold_storage = 600 }
			set_country_flag = selling_gold
		}
		
		remove_effect = {
	     	every_owned_state = { 
				add_building_construction = {
					type = infrastructure
					level = 1
					instant_build = yes
				}
			}
			clr_country_flag = selling_gold
		}
		
		ai_will_do = {
			factor = 5
		}
	}
	
	INF_enforce_the_Legion = {

		icon = GFX_decision_war_hero_speech

		allowed = {
		}

		available = {
			AND = {
				check_variable = {
					var = inf_gold_storage
					value = 500
					compare = greater_than_or_equals
				}
				NOT = {
					has_national_flag = selling_gold
				}
			}
		}

		fire_only_once = no

		days_remove = 30
		days_re_enable = 30

		custom_cost_trigger = {
			check_variable = {
				var = inf_gold_storage
				value = 500
				compare = greater_than_or_equals
			}
		}
		
		custom_cost_text = 500_gold

		complete_effect = {
			subtract_from_variable = { inf_gold_storage = 500 }
			set_country_flag = selling_gold
		}
		
		remove_effect = {
	     	add_political_power = 100
			clr_country_flag = selling_gold
		}
		
		ai_will_do = {
			factor = 5
		}
	}
	
	INF_hire_mercs = {

		icon = GFX_decision_bribe

		allowed = {
		}

		available = {
			AND = {
				check_variable = {
					var = inf_gold_storage
					value = 100
					compare = greater_than_or_equals
				}
				NOT = {
					has_national_flag = selling_gold
				}
			}
		}

		fire_only_once = no

		days_remove = 21
		days_re_enable = 30

		custom_cost_trigger = {
			check_variable = {
				var = inf_gold_storage
				value = 100
				compare = greater_than_or_equals
			}
		}
		
		custom_cost_text = 100_gold

		complete_effect = {
			subtract_from_variable = { inf_gold_storage = 100 }
			set_country_flag = selling_gold
		}
		
		remove_effect = {
			clr_country_flag = selling_gold
		}
		
		ai_will_do = {
			factor = 5
		}
	}
	
	INF_buy_IFV = {

		icon = GFX_decision_icv

		allowed = {
		}

		available = {
			AND = {
				check_variable = {
					var = inf_gold_storage
					value = 200
					compare = greater_than_or_equals
				}
				NOT = {
					has_national_flag = selling_gold
				}
			}
		}

		fire_only_once = no

		days_remove = 30
		days_re_enable = 30

		custom_cost_trigger = {
			check_variable = {
				var = inf_gold_storage
				value = 200
				compare = greater_than_or_equals
			}
		}
		
		custom_cost_text = 100_gold

		complete_effect = {
			subtract_from_variable = { inf_gold_storage = 200 }
			set_country_flag = selling_gold
		}
		
		remove_effect = {
			clr_country_flag = selling_gold
		}
		
		ai_will_do = {
			factor = 5
		}
	}
}

INF_Weakening_Enemies = {

    INF_Weak_Neighbour_On = {

		fire_only_once = no

        visible = {
            check_variable = {
                var = INF_Ruby_Energy
                value = 1
                compare = greater_than_or_equals
            }
        }


    	target_trigger = {
    		FROM = {
            	is_neighbor_of = INF

            	NOT = {
		    		is_puppet_of = INF
		    		is_in_faction_with = INF
		    		has_non_aggression_pact_with = INF

					tag = UFA
					tag = RCR
					has_government = fascism
					has_country_flag = chaos_rising
				}
           }
       }

		complete_effect = {
        	FROM = {
            	if = {
                	limit = {
                    	NOT = {
                        	has_variable = chaos
                        }
                    }
                    set_variable = { chaos = 0 }
                }
                set_country_flag = chaos_rising
            }
        }
    }

    INF_Weak_Neighbour_Off = {

        available = {
            check_variable = {
                var = INF_Ruby_Energy
                value = 1
                compare = greater_than_or_equals
            }
        }

        fire_only_once = no

        target_trigger = {
            FROM = {
                is_neighbor_of = INF
                has_country_flag = chaos_rising
            }
        }

        complete_effect = {
            FROM = {
                clr_country_flag = chaos_rising
            }            
        }
    }

    INF_Sacrifice_for_Energy = {

        fire_only_once = no

        available = {
            check_variable = {
                var = INF_Ruby_Energy
                value = 80
                compare = less_than_or_equals
            }
        }

        days_remove = 7
        days_re_enable = 30        

        custom_cost_trigger = {
            has_manpower > 1000
        }      

		custom_cost_text = 1000_manpower

        complete_effect = {
            add_manpower = -1000
        }

        remove_effect = {
            add_to_variable = { INF_Ruby_Energy = 20 }
            clamp_variable = {
                var = INF_Ruby_Energy
                min = 0
                max = 100
            }
        }
    }

    INF_Rings_for_Energy = {

        fire_only_once = no

        available = {
            check_variable = {
                var = INF_Ruby_Energy
                value = 65
                compare = less_than_or_equals
            }
        }

        days_remove = 3
        days_re_enable = 14        

        custom_cost_trigger = {
            check_variable = {
                var = rings 
                value = 20000
                compare = greater_than_or_equals
            }
        }      

		custom_cost_text = 20000_rings

        complete_effect = {
            subtract_from_variable = { rings = 20000 }
        }

        remove_effect = {
            add_to_variable = { INF_Ruby_Energy = INF_Ruby_Energy_refill_rings }
            clamp_variable = {
                var = INF_Ruby_Energy
                min = 0
                max = 100
            }
        }
    }
}

INF_Phantom_war = {
	INF_Verify_your_clock = {

		icon = GFX_decision_Destroy_HQ

		allowed = {
			tag = INF
		}
		activation = {
			has_completed_focus = INF_the_Phantom_Ruby
        }
		is_good = no

		days_mission_timeout = 150

		timeout_effect = {
			UFA = {
				create_wargoal = {
					type = puppet_wargoal_focus
					target = INF
				}
			}
		}
	}
}